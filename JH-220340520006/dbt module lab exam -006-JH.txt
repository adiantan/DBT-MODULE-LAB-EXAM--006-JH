-- session 1
-- 1

create table DEPT
(
DEPTNO INT(2),                 
DNAME VARCHAR(15),
LOC VARCHAR(10)
);


--2
DROP TABLE DEPT;
INSERT INTO DEPT(DEPTNO,DNAME,LOC)VALUES
(10,'ACCOUNTING','NEW YORK'),
(20,'RESEARCH','DALLAS'),
(30,'SALES','CHICAGO'),
(40,'OPERATIONS','BOSTAN');

DROP TABLE EMP;


CREATE TABLE EMP
(
EMPNO INT(4),
ENAME VARCHAR(10),
JOB VARCHAR(9),
HIREDATE DATE,
SAL FLOAT(7,2),
COMM FLOAT (7,2),
DEPTNO INT(2)
);

INSERT INTO EMP(EMPNO,ENAME,JOB,HIREDATE,SAL,COMM,DEPTNO)VALUES
(7839,'KING','MANAGER','1991-11-17',5000,NULL,10),
(7698,'BLAKE','CLERK','1981-05-01',2850,NULL,30),
(7782,'CLARK','MANAGER','1981-06-09',2450,NULL,10),
(7566,'JONES','CLERK','1981-04-02',2975,NULL,20),
(7654,'MARTIN','SALESMAN','1981-09-28',1250,1400,30),
(7499,'ALLEN','SALESMAN','1981-02-20',1600,300,30);

-- 3 Q Display all the employees where SAL between 2500 and 5000 (inclusive of both).

SELECT * FROM emp
WHERE SAL BETWEEN 2500 AND 5000;

-- 4. Display all the ENAMEs in descending order of ENAME.
SELECT ENAME FROM EMP 
ORDER BY ENAME DESC;

-- 5. Display all the JOBs in lowercase

SELECT LOWER(JOB)FROM EMP;

-- 6. Display the ENAMEs and the lengths of the ENAMEs

SELECT ENAME, LENGTH(ENAME) FROM EMP;

-- 7. Display the DEPTNO and the count of employees who belong to that DEPTNO .

SELECT DEPTNO ,COUNT(*)FROM emp
GROUP BY DEPTNO;

-- 8. Display the DNAMEs and the ENAMEs who belong to that DNAME.

SELECT DNAME , ENAME FROM EMP,DEPT 
WHERE (DEPT.DEPTNO=EMP.DEPTNO);

-- 9. Display the position at which the string ‘AR’ occurs in the ename.

SELECT INSTR(ENAME,'AR') FROM EMP;

-- 10. Display the HRA for each employee given that HRA is 20% of SAL.


SELECT ENAME , SAL,SAL*0.2 HRA FROM EMP;


-- SECTION II
-- Q1

DROP TABLE TEMPP;
CREATE TABLE TEMPP
(
STR1 VARCHAR (20),
SIC VARCHAR(20),
STRSIC VARCHAR(50)

);
DELIMITER //
CREATE PROCEDURE PROC1(STRING1 VARCHAR(20),STRING2 VARCHAR(20))
BEGIN
DECLARE  M VARCHAR(20);
DECLARE I INT;
SELECT LOCATE (STRING1, STRING2)INTO I;
IF I>0 THEN
 INSERT INTO TEMPP VALUES(STRING1,STRING2,'STRING1 EXISTS IN STRING2');
 ELSE 
 INSERT INTO TEMPP VALUES(STRING1,STRING2,'STRING1 NOT EXIST IN STRING2');
 END IF;
 END ; //
 DELIMITER ;
 
 
 CALL PROC1('DAC','CDAC');
 SELECT * FROM TEMPP;


  
  
  
  -- Q2
  
  DELIMITER //
  CREATE FUNCTION FUNC1(A INT,B INT, C INT)
  returns BOOLEAN 
  DETERMINISTIC
  BEGIN 
  DECLARE SUM INT;
  SET SUM=A+B+C;
  IF(SUM<A)OR(SUM<B)OR(SUM<C)
  THEN
  RETURN FALSE;
  ELSE
  RETURN TRUE;
  END IF;
  End ; //
  DELIMITER ;
  
  
 